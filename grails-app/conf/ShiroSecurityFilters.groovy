import org.apache.shiro.SecurityUtils
import org.apache.shiro.authc.AuthenticationException
import au.org.biodiversity.nsl.ApiKeyToken

/**
 * Generated by the Shiro plugin. This filters class protects all URLs
 * via access control by convention.
 */
class ShiroSecurityFilters {
    def filters = {
        all(uri: "/**") {
            before = {
                //if an apiKey is set then login with it
                if(params.apiKey) {
                    ApiKeyToken authToken = new ApiKeyToken(params.apiKey, null as char[], SecurityUtils.subject.host as String)
                    try {
                        Long start = System.currentTimeMillis()
                        SecurityUtils.subject.login(authToken)
                        log.debug "login took ${System.currentTimeMillis() - start}ms"
                    } catch (AuthenticationException ex) {
                        log.debug ex.message
                        return render(status: 401)
                    }
                }
                // Ignore direct views (e.g. the default main index page).
                if (!controllerName || controllerName =~ /(broker|asset|error)/) {
                    return true
                }

                // Access control by convention.
                accessControl(auth: true) {
                    true
                }
            }
        }
    }
}
