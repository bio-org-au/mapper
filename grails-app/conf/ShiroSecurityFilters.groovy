/*
    Copyright 2015 Australian National Botanic Gardens

    This file is part of NSL mapper project.

    Licensed under the Apache License, Version 2.0 (the "License"); you may not
    use this file except in compliance with the License. You may obtain a copy
    of the License at http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

import org.apache.shiro.SecurityUtils
import org.apache.shiro.authc.AuthenticationException
import au.org.biodiversity.nsl.ApiKeyToken

/**
 * Generated by the Shiro plugin. This filters class protects all URLs
 * via access control by convention.
 */
class ShiroSecurityFilters {
    def filters = {
        all(uri: "/admin/**") {
            before = {
                //if an apiKey is set then login with it
                if(params.apiKey) {
                    ApiKeyToken authToken = new ApiKeyToken(params.apiKey, null as char[], SecurityUtils.subject.host as String)
                    try {
                        Long start = System.currentTimeMillis()
                        SecurityUtils.subject.login(authToken)
                        log.debug "login took ${System.currentTimeMillis() - start}ms"
                    } catch (AuthenticationException ex) {
                        log.debug ex.message
                        return render(status: 401)
                    }
                }
                // Ignore direct views (e.g. the default main index page).
                if (!controllerName || controllerName =~ /(broker|asset|error)/) {
                    return true
                }

                // Access control by convention.
                accessControl(auth: true) {
                    true
                }
            }
        }
    }
}
